generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(cuid())
  name  String?
  email String? @unique
  image String?

  // Your custom relations
  notes   Note[]
  folders Folder[]

  // Required for NextAuth
  accounts Account[]
  sessions Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Note {
  id        String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  folderId  String?
  folder    Folder?  @relation(fields: [folderId], references: [id])
}

model Folder {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])
  notes  Note[]
}

model Node {
  id       Int    @id @default(autoincrement())
  title    String
  type     String
  outgoing Link[] @relation("OutgoingLinks")
  incoming Link[] @relation("IncomingLinks")
}

model Link {
  id       Int   @id @default(autoincrement())
  sourceId Int
  targetId Int
  type     String

  source   Node @relation("OutgoingLinks", fields: [sourceId], references: [id])
  target   Node @relation("IncomingLinks", fields: [targetId], references: [id])
}

